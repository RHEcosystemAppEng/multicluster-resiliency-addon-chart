apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
    service.beta.openshift.io/inject-cabundle: "true"
  name: resilientclusters.appeng.ecosystem.redhat.com
spec:
  group: appeng.ecosystem.redhat.com
  names:
    kind: ResilientCluster
    listKind: ResilientClusterList
    plural: resilientclusters
    shortNames:
      - rstc
    singular: resilientcluster
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.currentStatus.availability
          name: Available
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: ResilientCluster is used by the MultiCluster-Resiliency-Addon
            for maintain the status and state of each cluster running the Addon Agent.
            CRs should live in the relevant cluster-namespaces. One per Spoke, named
            after the cluster it represents.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            status:
              description: ResilientClusterStatus encapsulated the initial, current,
                and previous statuses of the ResilientCluster.
              properties:
                currentStatus:
                  description: ClusterStatus represents a status of the Spoke cluster
                    at a specific time.
                  properties:
                    availability:
                      description: ClusterAvailability is a bool representing whether
                        not the Spoke cluster is available. Use ClusterAvailable and
                        ClusterNotAvailable.
                      enum:
                        - "True"
                        - "False"
                      type: string
                    time:
                      format: date-time
                      type: string
                  type: object
                initialStatus:
                  description: ClusterStatus represents a status of the Spoke cluster
                    at a specific time.
                  properties:
                    availability:
                      description: ClusterAvailability is a bool representing whether
                        not the Spoke cluster is available. Use ClusterAvailable and
                        ClusterNotAvailable.
                      enum:
                        - "True"
                        - "False"
                      type: string
                    time:
                      format: date-time
                      type: string
                  type: object
                previousStatus:
                  description: ClusterStatus represents a status of the Spoke cluster
                    at a specific time.
                  properties:
                    availability:
                      description: ClusterAvailability is a bool representing whether
                        not the Spoke cluster is available. Use ClusterAvailable and
                        ClusterNotAvailable.
                      enum:
                        - "True"
                        - "False"
                      type: string
                    time:
                      format: date-time
                      type: string
                  type: object
              required:
                - currentStatus
                - initialStatus
              type: object
          required:
            - status
          type: object
      served: true
      storage: true
      subresources: {}
